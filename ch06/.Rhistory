f.64.mean<-rep(NA, n)
for (i in 1:n){
f.2.mean[i]<-mean(rf(2, df1=3, df2=6))
f.8.mean[i]<-mean(rf(8, df1=3, df2=6))
f.32.mean[i]<-mean(rf(32, df1=3, df2=6))
f.64.mean[i]<-mean(rf(64, df1=3, df2=6))
}
c(mean(f.2.mean), sd(f.2.mean))
c(mean(f.8.mean), sd(f.8.mean))
c(mean(f.32.mean), sd(f.32.mean))
c(mean(f.64.mean), sd(f.64.mean))
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
hist(f.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
hist(f.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
hist(f.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(1/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(1/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(1/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(3/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
c(mean(f.2.mean), sd(f.2.mean))
c(mean(f.8.mean), sd(f.8.mean))
c(mean(f.32.mean), sd(f.32.mean))
c(mean(f.64.mean), sd(f.64.mean))
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(3/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(4/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
#=================================================================
set.seed(9)
n<-1000
f.8.mean<-rep(NA, n)
f.16.mean<-rep(NA, n)
f.64.mean<-rep(NA, n)
f.256.mean<-rep(NA, n)
for (i in 1:n){
f.8.mean[i]<-mean(rf(8, df1=3, df2=6))
f.16.mean[i]<-mean(rf(16, df1=3, df2=6))
f.64.mean[i]<-mean(rf(64, df1=3, df2=6))
f.256.mean[i]<-mean(rf(256, df1=3, df2=6))
}
c(mean(f.8.mean), sd(f.8.mean))
c(mean(f.16.mean), sd(f.16.mean))
c(mean(f.64.mean), sd(f.64.mean))
c(mean(f.256.mean), sd(f.256.mean))
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(4/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(f.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.8.mean), max(f.8.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(4/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(2/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
c(mean(r.1.mean), sd(r.1.mean))
#4-2. 중심극한정리
#예제 4-2정규분포로 부터 추출된 표본평균 xbar의 분포
set.seed(9)
n<-1000
r.1.mean<-rep(NA, n)
r.2.mean<-rep(NA, n)
for(i in 1:n){
r.1.mean[i]<-mean(rnorm(4, mean=3, sd=1))
r.2.mean[i]<-mean(rnorm(4, mean=170, sd=6))
}
options(digits=4)
c(mean(r.1.mean), sd(r.1.mean))
c(mean(r.2.mean), sd(r.2.mean))
set.seed(9)
n<-1000
a.2.mean<-rep(NA, n)
a.8.mean<-rep(NA, n)
a.32.mean<-rep(NA, n)
a.64.mean<-rep(NA, n)
for (i in 1:n){
a.2.mean[i]<-mean(rchisq(2, df=3))
a.8.mean[i]<-mean(rchisq(8, df=3))
a.32.mean[i]<-mean(rchisq(32, df=3))
a.64.mean[i]<-mean(rchisq(64, df=3))
}
options(digits=3)
c(mean(a.2.mean), sd(a.2.mean))
c(mean(a.8.mean), sd(a.8.mean))
c(mean(a.32.mean), sd(a.32.mean))
c(mean(a.64.mean), sd(a.64.mean))
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(3/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x2<-seq(min(a.8.mean), max(a.8.mean), length=1000)
y2<-dnorm( x=x2, mean=3, sd(1/sqrt(8)))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(a.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 32",
col="orange", border="red")
x3<-seq(min(a.32.mean), max(a.32.mean), length=1000)
y3<-dnorm( x=x3, mean=3, sd(1/sqrt(32)))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(a.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(a.64.mean), max(a.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd(1/sqrt(64)))
lines(x4, y4, lty=2, lwd=2, col='blue')
c(mean(a.2.mean), sd(a.2.mean))
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(3/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(2/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
sqrt(4)
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(2/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
sqrt(128)
c(mean(a.2.mean), sd(a.2.mean))
df<-3
a.2.mean[i]<-mean(rchisq(2, df=df))
c(mean(a.2.mean), sd(a.2.mean))
df<-3
s <- sqrt(2 * df)
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
n<-1000
df<-3
s <- sqrt(2 * df)
a.2.mean<-rep(NA, n)
a.8.mean<-rep(NA, n)
a.32.mean<-rep(NA, n)
a.64.mean<-rep(NA, n)
for (i in 1:n){
a.2.mean[i]<-mean(rchisq(2, df=df))
a.8.mean[i]<-mean(rchisq(8, df=3))
a.32.mean[i]<-mean(rchisq(32, df=3))
a.64.mean[i]<-mean(rchisq(64, df=3))
}
options(digits=3)
c(mean(a.2.mean), sd(a.2.mean))
c(mean(a.8.mean), sd(a.8.mean))
c(mean(a.32.mean), sd(a.32.mean))
c(mean(a.64.mean), sd(a.64.mean))
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x2<-seq(min(a.8.mean), max(a.8.mean), length=1000)
y2<-dnorm( x=x2, mean=3, sd=s/sqrt(8))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(a.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 32",
col="orange", border="red")
x3<-seq(min(a.32.mean), max(a.32.mean), length=1000)
y3<-dnorm( x=x3, mean=3, sd=s/sqrt(32))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(a.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(a.64.mean), max(a.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd=s/sqrt(64))
lines(x4, y4, lty=2, lwd=2, col='blue')
t.2.mean<-rep(NA, n)
t.8.mean<-rep(NA, n)
t.32.mean<-rep(NA, n)
t.64.mean<-rep(NA, n)
for (i in 1:n){
t.2.mean[i]<-mean(rt(2, df=3))
t.8.mean[i]<-mean(rt(8, df=3))
t.32.mean[i]<-mean(rt(32, df=3))
t.64.mean[i]<-mean(rt(64, df=3))
}
options(digits=3)
c(mean(t.2.mean), sd(t.2.mean))
c(mean(t.8.mean), sd(t.8.mean))
c(mean(t.32.mean), sd(t.32.mean))
c(mean(t.64.mean), sd(t.64.mean))
par(mfrow=c(2,2))
hist(t.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(t.64.mean), max(t.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd=s/sqrt(64))
lines(x4, y4, lty=2, lwd=2, col='blue')
m<-df
s <- sqrt(2 * df)
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, sd=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.8), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
options(digits=3)
set.seed(1)
mean.seq <- function (x) {
n <- length(x)
sum <- 0
n2 <- 0
for( i in 1:n) {
newx <- i * x[i]
sum <- sum + newx
n2 <- n2 + i
}
return( sum / n2 )
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
par(mfrow=c(1, 2))
hist(y1, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(x1+x2+x3)/3", xlab="", ylab="", cex.main=2, col="orange", border="red")
hist(y2, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(1*x1+2*x2+6*x3)/6", xlab="", ylab="", cex.main=2, col="orange", border="red")
#5-3. 모비율에 대한 점추정
library(prob)
n <- 3
smps.all <- rolldie(n)
str( smps.all )
head( smps.all, n=3 )
is.even <- function(x) return(!x%%2)
var.p <- function(x) {
return( sum((x-mean(x))^2 / length(x))  )
}
p.even <- function(x, s.size=3) {
return( sum(is.even(x)) / s.size )
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
( p.p <- 0.5 )
var.p(phat)
( p.p*(1-p.p)/3 )
sqrt(var.p(phat))
is.even
var.p
p.even
is.even <- function(x) return(!x%%2)
var.p <- function(x) {
return( sum((x-mean(x))^2 / length(x))  )
}
p.even <- function(x, s.size=3) {
return( sum(is.even(x)) / s.size )
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
( p.p <- 0.5 )
var.p(phat)
( p.p*(1-p.p)/3 )
sqrt(var.p(phat))
is.even
p.even
phat <- apply(smps.all, 1, p.even)
is.even
#5-4. 구간추정
#예제 5-4. 모평균에 대한 95% 신뢰구간
set.seed(9)
n <- 10
x <- 1:100
y <- seq(-3, 3, by=0.01)
smps <- matrix(rnorm(n * length(x)), ncol=n)
xbar <- apply(smps, 1, mean)
se <- 1 / sqrt(10)
alpha <- 0.05
z <- qnorm(1 - alpha/2)
ll <- xbar - z * se
ul <- xbar + z * se
plot(y, type="n", xlab="표본추출", ylab="z", xlim=c(1, 100), ylim=c(-1.5, 1.5), cex.lab=1.8)
abline(h=0, col="red", lwd=2, lty=2)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll * ul > 0, "red", "black")
arrows(1:length(x), ll, 1:length(x), ul, code=3, angle=90, length=0.02, col=l.c, lwd=1.5)
plot(y, type="n", xlab="표본추출", ylab="z", xlim=c(1, 100), ylim=c(-1.5, 1.5), cex.lab=1.8)
abline(h=0, col="red", lwd=2, lty=2)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll * ul > 0, "red", "black")
arrows(1:length(x), ll, 1:length(x), ul, code=3, angle=90, length=0.02, col=l.c, lwd=1.5)
z
xbar
smps
alpha
ul
qt(0.025, 4)
#예제5-5. 모평균 95% 신뢰구간(모분산을 모를  때)
ci.t <- function(x, alpha=0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s / sqrt(n))
ul <- m + t * (s / sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return( ci )
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
#qt(0.025, 4)
#qt(0.025, 9)
#예제5-5. 모평균 95% 신뢰구간(모분산을 모를  때)
ci.t <- function(x, alpha=0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s / sqrt(n))
ul <- m + t * (s / sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return( ci )
}
#qt(0.025, 4)
qt(0.025, 9)
#예제5-5. 모평균 95% 신뢰구간(모분산을 모를  때)
ci.t <- function(x, alpha=0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s / sqrt(n))
ul <- m + t * (s / sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return( ci )
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
data <- read.csv('D:/Workspace/R-statistics/ch06', header=T)
setwd('D:\Workspace\R-statistics\ch06')
setwd('D:/Workspace/R-statistics/ch06')
data <- read.csv('2016.6th.csv', header=T)
str(data)
tmp <- subset(data, data$나이==7 )
height.p <- tmp$X104.키
set.seed(9)
height <- height.p[sample(length(height.p), 15)]
height
mean(height)
mu0 <- 1220
sd(height)
sqrt( length(height) )
(mean(height) - mu0) / (sd(height) / sqrt(length(height)))
pt(0.727, 14)
#예제 4-3. 임의의 분포에서 추출된 표본평균 xbar의 분포
set.seed(9)
t<-10
p<-0.1
x<-0:10
n<-1000
b.2.mean<-rep(NA, n)
b.4.mean<-rep(NA, n)
b.32.mean<-rep(NA, n)
b.64.mean<-rep(NA, n)
for (i in 1:n){
b.2.mean[i]<-mean(rbinom(2, size=t, prob=p))
b.4.mean[i]<-mean( rbinom(4, size=t, prob=p))
b.32.mean[i]<-mean(rbinom(32, size=t, prob=p))
b.64.mean[i]<-mean(rbinom(64, size=t, prob=p))
}
#표본들평균들의 분포에서 평균과 표준편차
options(digits=4)
c(mean(b.2.mean), sd(b.2.mean))
c(mean(b.4.mean), sd(b.4.mean))
c(mean(b.32.mean), sd(b.32.mean))
c(mean(b.64.mean), sd(b.64.mean))
sd=sqrt(0.9)/sqrt(2)
sd
c(mean(t.2.mean), sd(t.2.mean))
c(mean(t.8.mean), sd(t.8.mean))
c(mean(t.32.mean), sd(t.32.mean))
c(mean(t.64.mean), sd(t.64.mean))
sd(t.2.mean)
y1
#5장 추정
#5-1. 점추정
#예제 5-1. 유효성
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, sd=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.8), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
#예제 5-2. 유효성 모의실험
#Y2bar의 기대값을 구하기 위한 함수
options(digits=3)
set.seed(1)
mean.seq <- function (x) {
n <- length(x)
sum <- 0
n2 <- 0
for( i in 1:n) {
newx <- i * x[i]
sum <- sum + newx
n2 <- n2 + i
}
return( sum / n2 )
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3) #랜덤값 가져옴
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
par(mfrow=c(1, 2))
hist(y1, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(x1+x2+x3)/3", xlab="", ylab="", cex.main=2, col="orange", border="red")
hist(y2, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(1*x1+2*x2+6*x3)/6", xlab="", ylab="", cex.main=2, col="orange", border="red")
#5-3. 모비율에 대한 점추정
library(prob)
n <- 3
smps.all <- rolldie(n)
str( smps.all )
head( smps.all, n=3 )
is.even <- function(x) return(!x%%2)
var.p <- function(x) {
return( sum((x-mean(x))^2 / length(x))  )
}
#T=1, F=0
p.even <- function(x, s.size=3) {
return( sum(is.even(x)) / s.size )
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
( p.p <- 0.5 )
var.p(phat)
( p.p*(1-p.p)/3 )
sqrt(var.p(phat))
