col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(3/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(4/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
#=================================================================
set.seed(9)
n<-1000
f.8.mean<-rep(NA, n)
f.16.mean<-rep(NA, n)
f.64.mean<-rep(NA, n)
f.256.mean<-rep(NA, n)
for (i in 1:n){
f.8.mean[i]<-mean(rf(8, df1=3, df2=6))
f.16.mean[i]<-mean(rf(16, df1=3, df2=6))
f.64.mean[i]<-mean(rf(64, df1=3, df2=6))
f.256.mean[i]<-mean(rf(256, df1=3, df2=6))
}
c(mean(f.8.mean), sd(f.8.mean))
c(mean(f.16.mean), sd(f.16.mean))
c(mean(f.64.mean), sd(f.64.mean))
c(mean(f.256.mean), sd(f.256.mean))
par(mfrow=c(2,2))
hist(f.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.2.mean), max(f.2.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(4/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(f.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x1<-seq(min(f.8.mean), max(f.8.mean), length=1000)
y1<-dnorm( x=x1, mean=3, sd(4/sqrt(8)))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(2/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
c(mean(r.1.mean), sd(r.1.mean))
#4-2. 중심극한정리
#예제 4-2정규분포로 부터 추출된 표본평균 xbar의 분포
set.seed(9)
n<-1000
r.1.mean<-rep(NA, n)
r.2.mean<-rep(NA, n)
for(i in 1:n){
r.1.mean[i]<-mean(rnorm(4, mean=3, sd=1))
r.2.mean[i]<-mean(rnorm(4, mean=170, sd=6))
}
options(digits=4)
c(mean(r.1.mean), sd(r.1.mean))
c(mean(r.2.mean), sd(r.2.mean))
set.seed(9)
n<-1000
a.2.mean<-rep(NA, n)
a.8.mean<-rep(NA, n)
a.32.mean<-rep(NA, n)
a.64.mean<-rep(NA, n)
for (i in 1:n){
a.2.mean[i]<-mean(rchisq(2, df=3))
a.8.mean[i]<-mean(rchisq(8, df=3))
a.32.mean[i]<-mean(rchisq(32, df=3))
a.64.mean[i]<-mean(rchisq(64, df=3))
}
options(digits=3)
c(mean(a.2.mean), sd(a.2.mean))
c(mean(a.8.mean), sd(a.8.mean))
c(mean(a.32.mean), sd(a.32.mean))
c(mean(a.64.mean), sd(a.64.mean))
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(3/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x2<-seq(min(a.8.mean), max(a.8.mean), length=1000)
y2<-dnorm( x=x2, mean=3, sd(1/sqrt(8)))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(a.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 32",
col="orange", border="red")
x3<-seq(min(a.32.mean), max(a.32.mean), length=1000)
y3<-dnorm( x=x3, mean=3, sd(1/sqrt(32)))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(a.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(a.64.mean), max(a.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd(1/sqrt(64)))
lines(x4, y4, lty=2, lwd=2, col='blue')
c(mean(a.2.mean), sd(a.2.mean))
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(3/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(2/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
sqrt(4)
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd(2/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
sqrt(128)
c(mean(a.2.mean), sd(a.2.mean))
df<-3
a.2.mean[i]<-mean(rchisq(2, df=df))
c(mean(a.2.mean), sd(a.2.mean))
df<-3
s <- sqrt(2 * df)
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
n<-1000
df<-3
s <- sqrt(2 * df)
a.2.mean<-rep(NA, n)
a.8.mean<-rep(NA, n)
a.32.mean<-rep(NA, n)
a.64.mean<-rep(NA, n)
for (i in 1:n){
a.2.mean[i]<-mean(rchisq(2, df=df))
a.8.mean[i]<-mean(rchisq(8, df=3))
a.32.mean[i]<-mean(rchisq(32, df=3))
a.64.mean[i]<-mean(rchisq(64, df=3))
}
options(digits=3)
c(mean(a.2.mean), sd(a.2.mean))
c(mean(a.8.mean), sd(a.8.mean))
c(mean(a.32.mean), sd(a.32.mean))
c(mean(a.64.mean), sd(a.64.mean))
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2)))
lines(x1, y1, lty=2, lwd=2, col='blue')
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x2<-seq(min(a.8.mean), max(a.8.mean), length=1000)
y2<-dnorm( x=x2, mean=3, sd=s/sqrt(8))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(a.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 32",
col="orange", border="red")
x3<-seq(min(a.32.mean), max(a.32.mean), length=1000)
y3<-dnorm( x=x3, mean=3, sd=s/sqrt(32))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(a.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(a.64.mean), max(a.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd=s/sqrt(64))
lines(x4, y4, lty=2, lwd=2, col='blue')
t.2.mean<-rep(NA, n)
t.8.mean<-rep(NA, n)
t.32.mean<-rep(NA, n)
t.64.mean<-rep(NA, n)
for (i in 1:n){
t.2.mean[i]<-mean(rt(2, df=3))
t.8.mean[i]<-mean(rt(8, df=3))
t.32.mean[i]<-mean(rt(32, df=3))
t.64.mean[i]<-mean(rt(64, df=3))
}
options(digits=3)
c(mean(t.2.mean), sd(t.2.mean))
c(mean(t.8.mean), sd(t.8.mean))
c(mean(t.32.mean), sd(t.32.mean))
c(mean(t.64.mean), sd(t.64.mean))
par(mfrow=c(2,2))
hist(t.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(t.64.mean), max(t.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd=s/sqrt(64))
lines(x4, y4, lty=2, lwd=2, col='blue')
m<-df
s <- sqrt(2 * df)
setwd("D:/Workspace/R-statistics/ch07")
setwd("D:/Workspace/R-statistics/ch07")
ad <- read.csv("age.data.csv", header=T)
str(a
y1.mean <- mean( y1 )
y2.mean <- mean( y2 )
y3.mean <- mean( y3 )
sse.1 <- sum( (y1 - y1.mean)^2 )
sse.2 <- sum( (y2 - y2.mean)^2 )
sse.3 <- sum( (y3 - y3.mean)^2 )
(sse <- sse.1 + sse.2 + sse.3)
(dfe <- (length(y1)-1) + (length(y2)-1) + (length(y3)-1))
y.mean <- mean(ad$age)#분자
sst.1 <- length(y1) * sum((y1.mean - y)^2)
sst.2 <- length(y2) * sum((y2.mean - y)^2)
sst.3 <- length(y3) * sum((y3.mean - y)^2)
(sst <- sst.1 + sst.2 + sst.3)
(dft <- length( levels( ad$scale ) ) - 1) #분자의 자유도
#
mst <- sst / dft
mse <- sse / dfe
(f.t <- mst / mse)
str(ad)
y1.mean <- mean( y1 )
y2.mean <- mean( y2 )
y3.mean <- mean( y3 )
sse.1 <- sum( (y1 - y1.mean)^2 )
sse.2 <- sum( (y2 - y2.mean)^2 )
sse.3 <- sum( (y3 - y3.mean)^2 )
(sse <- sse.1 + sse.2 + sse.3)
(dfe <- (length(y1)-1) + (length(y2)-1) + (length(y3)-1))
y.mean <- mean(ad$age)#분자
sst.1 <- length(y1) * sum((y1.mean - y)^2)
sst.2 <- length(y2) * sum((y2.mean - y)^2)
sst.3 <- length(y3) * sum((y3.mean - y)^2)
(sst <- sst.1 + sst.2 + sst.3)
(dft <- length( levels( ad$scale ) ) - 1) #분자의 자유도
sst.1 <- length(y1) * sum((y1.mean - y)^2)
y <- mean(ad$age)#분자
sst.1 <- length(y1) * sum((y1.mean - y)^2)
sst.2 <- length(y2) * sum((y2.mean - y)^2)
sst.3 <- length(y3) * sum((y3.mean - y)^2)
(sst <- sst.1 + sst.2 + sst.3)
(dft <- length( levels( ad$scale ) ) - 1) #분자의 자유도
#
mst <- sst / dft
mse <- sse / dfe
(f.t <- mst / mse)
alpha <- 0.05
(tol <- qf(1-alpha, 2, 147))
(p.value <- 1 - pf(f.t, 2, 147))
ad
class(as)
class(ad)
lake<-c(1,2,3)
ppm<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10), c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ppm<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)&c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)&
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame(lake, ppm)
ppm<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)&&c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)&&
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame(lake, ppm)
df
ppm<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10), c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)&
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame(lake, ppm)
df
lake1<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
lake2<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
lake3<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame(lake1, lake2, lake3)
df
class(df)
ow <- lm(lake1~lake3, data=df)#lm은 leanear 모델
anova(ow)
#R을 이용한 p-value 구하기
ow <- lm(age~scale, data=ad)#lm은 leanear 모델
anova(ow)
oneway.test(age~scale, data=ad, var.equal=TRUE)
lake<-c(1,2,3)
lake<-c(1,2,3)
lake
ppm<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10),
c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ppm<-(c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10),
c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30))
str(ad)
lake1<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
lake1<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
lake2<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
lake3<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame(lake1, lake2, lake3)
df
ow <- lm(lake1~lake3, data=df)#lm은 leanear 모델
anova(ow)
lake<-c(1,2,3)
ppm<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10),
c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
a<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10),
b<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10),
c<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame()
a<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
b<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
c<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
df<-data.frame(a,b,c)
df
ppm<-c('5', '7','6', '8', '6', '7', '8','10')
ppm
lake1<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
lake2<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
lake3<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ppm<-c(lake1, lake2, lake3)
ppm
y<-c(lake1, lake2, lake3)
n <- rep(10, 3)
group <- rep(1:3, n)
group_df <- data.frame(y, group)
group_df
group_df <- transform(group_df, group = factor(호수))
group_df <- transform(group_df, hosoo = factor(group))
ppm<-c(lake1, lake2, lake3)
n <- rep(10, 3)
group <- rep(1:3, n)
group_df <- data.frame(ppm, group)
group_df <- transform(group_df, hosoo = factor(group))
group_df
ppm <- rep(1:3, n)
group_df <- data.frame(ppm, group)
group_df
ppm<-c(lake1, lake2, lake3)
n <- rep(10, 3)
hosoo <- rep(1:3, n)
group_df <- data.frame(ppm, hosoo)
group_df
group_df <- transform(group_df, hosoo = factor(group))
group_df
sapply(group_df, class)
ow <- lm(ppm~hosoo, data=group_df)
anova(ow)
#R을 이용한 p-value 구하기
ow <- lm(age~scale, data=ad)#lm은 leanear 모델
anova(ow)
oneway.test(ppm~hosoo, data=group_df, var.equal=TRUE)
#2. 다음은 3개 채소에 대한 도매시장 7곳의 가격이다. 3개 채소의 가격이 같다고 할 수 있는가?
vegi1<-c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7)
vegi2<-c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4)
vegi3<-c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8)
price<-c(vegi1, vegi2, vegi3)
n <- rep(7, 3)
chaeso <- rep(1:3, n)
group_df <- data.frame(price, chaeso)
lake1<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
lake2<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
lake3<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ppm<-c(lake1, lake2, lake3)
n <- rep(10, 3)
hosoo <- rep(1:3, n)
group_df <- data.frame(ppm, hosoo)
group_df <- transform(group_df, hosoo = factor(group))
group_df
lake1<-c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
lake2<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
lake3<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ppm<-c(lake1, lake2, lake3)
n <- rep(10, 3)
hosoo <- rep(1:3, n)
group_df <- data.frame(ppm, hosoo)
group_df <- transform(group_df, hosoo = factor(group))
group_df
group_df <- transform(group_df, hosoo = factor(hosoo))
ow <- lm(ppm~hosoo, data=group_df)
anova(ow)
oneway.test(ppm~hosoo, data=group_df, var.equal=TRUE)
#R을 이용한 p-value 구하기
ow <- lm(age~scale, data=ad)#lm은 leanear 모델
setwd("D:/Workspace/R-statistics/ch07")
ad <- read.csv("age.data.csv", header=T)
#R을 이용한 p-value 구하기
ow <- lm(age~scale, data=ad)#lm은 leanear 모델
anova(ow)
oneway.test(age~scale, data=ad, var.equal=TRUE)
#2. 다음은 3개 채소에 대한 도매시장 7곳의 가격이다. 3개 채소의 가격이 같다고 할 수 있는가?
vegi1<-c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7)
vegi2<-c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4)
vegi3<-c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8)
price<-c(vegi1, vegi2, vegi3)
n <- rep(7, 3)
chaeso <- rep(1:3, n)
group_df <- data.frame(price, chaeso)
group_df <- transform(group_df, chaeso = factor(chaeso))
hosoo <- rep(1:3, n)
hosoo_df <- data.frame(ppm, hosoo)
hosoo_df <- transform(hosoo_df, hosoo = factor(hosoo))
ow <- lm(ppm~hosoo, data=hosoo_df)
anova(ow)
oneway.test(ppm~hosoo, data=hosoo_df, var.equal=TRUE)
hosoo <- rep(1:3, n)
hosoo_df <- data.frame(ppm, hosoo)
hosoo_df <- transform(hosoo_df, hosoo = factor(hosoo))
lake2<-c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
lake3<-c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ppm<-c(lake1, lake2, lake3)
n <- rep(10, 3)
hosoo <- rep(1:3, n)
hosoo_df <- data.frame(ppm, hosoo)
hosoo_df <- transform(hosoo_df, hosoo = factor(hosoo))
ow <- lm(ppm~hosoo, data=hosoo_df)
anova(ow)
oneway.test(ppm~hosoo, data=hosoo_df, var.equal=TRUE)
vegi2<-c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4)
vegi3<-c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8)
price<-c(vegi1, vegi2, vegi3)
n <- rep(7, 3)
chaeso <- rep(1:3, n)
chaeso_df <- data.frame(price, chaeso)
chaeso_df <- transform(chaeso_df, chaeso = factor(chaeso))
ow <- lm(price~chaeso, data=chaeso_df)
anova(ow)
oneway.test(price~chaeso, data=chaeso_df, var.equal=TRUE)
chaeso_df
oneway.test(price~chaeso, data=chaeso_df, var.equal=TRUE)
anova(ow)
oneway.test(price~chaeso, data=chaeso_df, var.equal=TRUE)
#3. 어느 공정의 부적합품률은 15% 이다. 시료 80개를 추출하여 검사한 결과 불량이 16개이다.
#   유의수준 5%로 적합도 검정을 하시오.
x <- c(64, 16)
chisq.test(x, p=c(68, 12)/80)
#예제-3. 성별에 따른 대학원 입학 여부의 독립성 검정
data(UCBAdmissions)
UCBAdmissions
ucba.tab <- apply(UCBAdmissions, c(1, 2), sum)#apply 사용법
ucba.tab
ucba.tab <- apply(UCBAdmissions, c(1, 1), sum)#apply 사용법
ucba.tab <- apply(UCBAdmissions, c(2, 2), sum)#apply 사용법
ucba.tab <- apply(UCBAdmissions, c(1, 2), sum)#apply 사용법
ucba.tab
round(prop.table(ucba.tab, margin=2) * 100, 1)#
setwd("D:/Workspace/R-statistics/ch08")
#4. 다음은 음주량과 흡연량 데이터이다. 이 표로부터 음주량과 흡연량 사이에 연관이 있는지 확인하시오.
setwd("D:/Workspace/R-statistics/ch08")
data<-read.csv('practicedata.csv')
ucba.tab <- apply(UCBAdmissions, c(1, 2), sum)#apply 사용법
round(prop.table(ucba.tab, margin=2) * 100, 1)#
# 독립성 검정
(a.n <- margin.table(ucba.tab, margin=1))
(g.n <- margin.table(ucba.tab, margin=2))
a.p
(a.p <- a.n / margin.table(ucba.tab))
(g.p <- g.n / margin.table(ucba.tab))
a.p
g.p
ucba.tab
round(prop.table(ucba.tab, margin=2) * 100, 1)#
data
(ciga <- margin.table(data, margin=1))
(alco <- margin.table(data, margin=2))
ucba.tab
class(ucba.tab)
#예제-3. 성별에 따른 대학원 입학 여부의 독립성 검정
data(UCBAdmissions)
# 독립성 검정
(a.n <- margin.table(ucba.tab, margin=1))
#4. 다음은 음주량과 흡연량 데이터이다. 이 표로부터 음주량과 흡연량 사이에 연관이 있는지 확인하시오.
setwd("D:/Workspace/R-statistics/ch08")
data<-read.csv('practicedata.csv')
(ciga <- margin.table(data, margin=1))
#4. 다음은 음주량과 흡연량 데이터이다. 이 표로부터 음주량과 흡연량 사이에 연관이 있는지 확인하시오.
반병이상<-c(23, 21, 63, 107)
반병이하<-c(31, 48, 159, 238)
못마심<-c(13,23,119,155)
계<-c(67, 92, 341, 500)
data<-rbind(반병이상, 반병이하,못마심, 계)
data
dimnames(data)<-list("술", "담배" = c("1갑 이상", "1갑 이하", "안피움", "계"))
dimnames(data)<-list("술 = c('반병이상','반병이하','못마심','계'), "담배" = c("1갑 이상", "1갑 이하", "안피움", "계"))
dimnames(data)<-list("술" = c('반병이상','반병이하','못마심','계'), "담배" = c("1갑 이상", "1갑 이하", "안피움", "계"))
data
#4. 다음은 음주량과 흡연량 데이터이다. 이 표로부터 음주량과 흡연량 사이에 연관이 있는지 확인하시오.
row1<-c(23, 21, 63, 107)
row2<-c(31, 48, 159, 238)
row3<-c(13,23,119,155)
row4<-c(67, 92, 341, 500)
data<-rbind(row1, row2,row3,row4)
data
dimnames(data)<-list("술" = c('반병이상','반병이하','못마심','계'), "담배" = c("1갑 이상", "1갑 이하", "안피움", "계"))
data
#4. 다음은 음주량과 흡연량 데이터이다. 이 표로부터 음주량과 흡연량 사이에 연관이 있는지 확인하시오.
row1<-c(23, 21, 63)
row2<-c(31, 48, 159)
row3<-c(13,23,119)
row4<-c(67, 92, 341)
data<-rbind(row1, row2,row3,row4)
data
dimnames(data)<-list("술" = c('반병이상','반병이하','못마심'), "담배" = c("1갑 이상", "1갑 이하", "안피움"))
data
#4. 다음은 음주량과 흡연량 데이터이다. 이 표로부터 음주량과 흡연량 사이에 연관이 있는지 확인하시오.
row1<-c(23, 21, 63)
row2<-c(31, 48, 159)
row3<-c(13,23,119)
data<-rbind(row1,row2,row3)
data
dimnames(data)<-list("술" = c('반병이상','반병이하','못마심'), "담배" = c("1갑 이상", "1갑 이하", "안피움"))
data
addmargins(data)
chisq.test(data)
#3. 어느 공정의 부적합품률은 15% 이다. 시료 80개를 추출하여 검사한 결과 불량이 16개이다.
#   유의수준 5%로 적합도 검정을 하시오.
#양품:64, 불량: 16
#기대도수:80*0.85=68, 80*0.15=12
x <- c(64, 16)
chisq.test(x, p=c(68, 12)/80)
oneway.test(price~chaeso, data=chaeso_df, var.equal=TRUE)
oneway.test(ppm~hosoo, data=hosoo_df, var.equal=TRUE)
