father<-c(150, 160, 170, 180, 190)
son<-c(176, 179, 182, 181, 185)
k<-lm(son~father)
k
income<-c(100,  200,  300,  400,  500)
pay<-c(30, 70, 85, 140, 197)
v<-lm(pay~income)
v
#3. mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
library(dplyr)
g<-mtcars %>%
select(disp, hp)
reg_g<-lm(g$hp~g$disp)
#4. MASS 패키지를 설치하고, 이 패키지 안에 있는 Boston 데이터셋을 이용하여 Boston 인근의
#   집값을 결정하는 다중회귀 모델을 만드시오.
library(MASS)
#3. mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
library(dplyr)
install.packages(c("dplyr", "leaps"))
install.packages("ggplot2")
install.packages(c("PairedData", "psych"))
install.packages("prob")
#3. mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
library(dplyr)
g<-mtcars %>%
select(disp, hp)
reg_g<-lm(g$hp~g$disp)
reg_g
housing<-regsubsets(medv~., data=Boston, method='seqrep', nbest=13)
#4. MASS 패키지를 설치하고, 이 패키지 안에 있는 Boston 데이터셋을 이용하여 Boston 인근의
#   집값을 결정하는 다중회귀 모델을 만드시오.
library(MASS)
#[06]  RM	    주택 1가구당 평균 방의 개수
#[07]  AGE	  1940년 이전에 건축된 소유주택의 비율
#[08]  DIS	  5개의 보스턴 직업센터까지의 접근성 지수
#[09]  RAD	  방사형 도로까지의 접근성 지수
#[10]  TAX	  10,000 달러 당 재산세율
#[11]  PTRATIO	자치시(town)별 학생/교사 비율
#[12]  B	    1000(Bk-0.63)^2, 여기서 Bk는 자치시별 흑인의 비율을 말함.
#[13]  LSTAT	모집단의 하위계층의 비율(%)
#[14]  MEDV	  본인 소유의 주택가격(중앙값) (단위: $1,000)
#출처: https://ai-times.tistory.com/431 [ai-times]
boston_house<-lm(medv~., data=Boston)
step(boston_house, direction='both')
library(leaps)
housing<-regsubsets(medv~., data=Boston, method='seqrep', nbest=13)
summary(housing)
plot(housing)
install.packages('ggplot2')
install.packages('dplyr')
install.packages("dplyr")
install.packages('stringr')
# Chi-squared distribution
set.seed(9)
n<-1000
df<-3
a.2.mean<-rep(NA, n)
a.8.mean<-rep(NA, n)
a.32.mean<-rep(NA, n)
a.64.mean<-rep(NA, n)
for (i in 1:n){
a.2.mean[i]<-mean(rchisq(2, df=df))
a.8.mean[i]<-mean(rchisq(8, df=3))
a.32.mean[i]<-mean(rchisq(32, df=3))
a.64.mean[i]<-mean(rchisq(64, df=3))
}
options(digits=3)
c(mean(a.2.mean), sd(a.2.mean))
c(mean(a.8.mean), sd(a.8.mean))
c(mean(a.32.mean), sd(a.32.mean))
c(mean(a.64.mean), sd(a.64.mean))
s <- sqrt(2 * df)#var(X)=2k (분산)
par(mfrow=c(2,2), oma=c(1,1,2,1))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x2<-seq(min(a.8.mean), max(a.8.mean), length=1000)
y2<-dnorm( x=x2, mean=3, sd=s/sqrt(8))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(a.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 32",
col="orange", border="red")
x3<-seq(min(a.32.mean), max(a.32.mean), length=1000)
y3<-dnorm( x=x3, mean=3, sd=s/sqrt(32))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(a.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(a.64.mean), max(a.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd=s/sqrt(64))
lines(x4, y4, lty=2, lwd=2, col='blue')
mtext("Chi-squared Distribution", side = 3, line = -1, outer = TRUE)
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
par(mfrow=c(2,1))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(3,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(3,3))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(111))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(2,2))
hist(a.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
par(mfrow=c(2,2))
hist(chi.5.mean,prob=T,main="Chi-square with n=5",
col="yellow",border="red")
par(mfrow=c(2,2))
hist(a.2.mean,prob=T,main="Chi-square with n=5",
col="yellow",border="red")
# Chi-squared distribution
set.seed(9)
n<-1000
df<-3
a.2.mean<-rep(NA, n)
a.8.mean<-rep(NA, n)
a.32.mean<-rep(NA, n)
a.64.mean<-rep(NA, n)
for (i in 1:n){
a.2.mean[i]<-mean(rchisq(2, df=df))
a.8.mean[i]<-mean(rchisq(8, df=3))
a.32.mean[i]<-mean(rchisq(32, df=3))
a.64.mean[i]<-mean(rchisq(64, df=3))
}
options(digits=3)
c(mean(a.2.mean), sd(a.2.mean))
c(mean(a.8.mean), sd(a.8.mean))
c(mean(a.32.mean), sd(a.32.mean))
c(mean(a.64.mean), sd(a.64.mean))
s <- sqrt(2 * df)#var(X)=2k (분산)
par(mfrow=c(2,2))
hist(a.2.mean,prob=T, main="Chi-square with n=5",
col="yellow",border="red")
x1<-seq(min(a.2.mean), max(a.2.mean), length=1000)
y1<-dnorm(x=x1, mean=3, sd=s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(a.8.mean, prob=T, ylab="", xlab="", main="표본 크기 : 8",
col="orange", border="red")
x2<-seq(min(a.8.mean), max(a.8.mean), length=1000)
y2<-dnorm( x=x2, mean=3, sd=s/sqrt(8))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(a.32.mean, prob=T, ylab="", xlab="", main="표본 크기 : 32",
col="orange", border="red")
x3<-seq(min(a.32.mean), max(a.32.mean), length=1000)
y3<-dnorm( x=x3, mean=3, sd=s/sqrt(32))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(a.64.mean, prob=T, ylab="", xlab="", main="표본 크기 : 64",
col="orange", border="red")
x4<-seq(min(a.64.mean), max(a.64.mean), length=1000)
y4<-dnorm( x=x4, mean=3, sd=s/sqrt(64))
lines(x4, y4, lty=2, lwd=2, col='blue')
#===============================================================
# t-distribution
n<-1000
t.2.mean<-rep(NA, n)
t.8.mean<-rep(NA, n)
t.32.mean<-rep(NA, n)
t.64.mean<-rep(NA, n)
for (i in 1:n){
t.2.mean[i]<-mean(rt(2, df=10))
t.8.mean[i]<-mean(rt(8, df=10))
t.32.mean[i]<-mean(rt(32, df=10))
t.64.mean[i]<-mean(rt(64, df=10))
}
options(digits=3)
c(mean(t.2.mean), sd(t.2.mean))
c(mean(t.8.mean), sd(t.8.mean))
c(mean(t.32.mean), sd(t.32.mean))
c(mean(t.64.mean), sd(t.64.mean))
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t.2.mean, prob=T, ylab="", xlab="", main="표본 크기 : 2",
col="orange", border="red")
x1<-seq(min(t.2.mean), max(t.2.mean), length=1000)
y1<-dnorm( x=x1, mean(t.2.mean), sd(t.2.mean))
lines(x1, y1, lty=2, lwd=2, col='blue')
sd(t.2.mean)
sd(t.2.mean)
set.seed(123)
df <- 10
x <- seq(-100,100,by=0.001)
n <- 1000
t.5.mean <- rep(NA,n)
t.20.mean <- rep(NA,n)
t.40.mean <- rep(NA,n)
t.160.mean <- rep(NA,n)
for (i in 1:n) {
t.5.mean[i] <- mean(rt(5,df))
t.20.mean[i] <- mean(rt(20,df))
t.40.mean[i] <- mean(rt(40,df))
t.160.mean[i] <- mean(rt(160,df))
}
options(digits=4)
c(mean(t.5.mean),sd(t.5.mean))
par(mfrow=c(2,2))
hist(t.5.mean,prob=T,main="T with n=5",
col="green",border="red")
x1 <- seq(min(t.5.mean),max(t.5.mean),length=1000)
y1 <- dnorm(x1,mean=0,sd=sqrt(10/8)/sqrt(5))
lines(x1,y1,lty=2,lwd=2,col="blue")
sd=sqrt(10/8)/sqrt(5)
sd
dnorm(3, 6, prob=1/3)
dbinom(3, 6, prob=1/3)
# 1-1. 시행횟수가 6이고 성공확률이 1/3인 이항분포에서 성공횟수가 3이 될 확률
(dbinom(3, 6, prob=1/3))
# 1-1. 시행횟수가 6이고 성공확률이 1/3인 이항분포에서 성공횟수가 3이 될 확률
dbinom(3, 6, prob=1/3)
# 1-2. 평균이 170이고 표준편차가 6인 정규분포에서 상위20%되는 사람들의 키 범위
1-pnorm(0.2, 170, 6)
# 1-2. 평균이 170이고 표준편차가 6인 정규분포에서 상위20%되는 사람들의 키 범위
(1-pnorm(0.2, 170, 6))
# 1-2. 평균이 170이고 표준편차가 6인 정규분포에서 상위20%되는 사람들의 키 범위
1-pnorm(0.2, 170, 6)
# 1-1. 시행횟수가 6이고 성공확률이 1/3인 이항분포에서 성공횟수가 3이 될 확률
dbinom(3, 6, prob=1/3)
pnorm(0.2, 170, 6)
qchisq(0.05, df)
# 1-4. 자유도가 2인 t-분포에서 누적확률이 0.975일 때의 값
pt(0.975, 2)
# 1-3. 자유도가 3인 카이제곱분포에서 누적확률이 95%일 때의 값
qchisq(0.05, 3)
# 2.
cat("정답: 2,4,5번")
# 3.
head(iris)
library(dplyr)
iris_setosa<-iris %>%
filter(Species=='setosa')
iris_setosa
mean(iris_setosa)
mean(iris_setosa$Sepal.Length)
sd(iris_setosa$Sepal.Length)
cor(iris_setosa$Sepal.Length)
var(iris_setosa$Sepal.Length)
dim(iris_setosa$Sepal.Length)
str(iris_setosa$Sepal.Length)
# 1-4. 자유도가 2인 t-분포에서 누적확률이 0.975일 때의 값
qt(0.975, 2)
# 1-3. 자유도가 3인 카이제곱분포에서 누적확률이 95%일 때의 값
pchisq(0.05, 3)
# 1-3. 자유도가 3인 카이제곱분포에서 누적확률이 95%일 때의 값
pchisq(0.95, 3)
sd(iris_setosa$Sepal.Length)
var(iris_setosa$Sepal.Length)
avg<-mean(iris_setosa$Sepal.Length)
str(iris)
length(iris)
iris
avg-1.96*
x<-50
x<-50
y<-150
p.hat<-x/y
alpha<-0.05
z<-qnorm(1-(alpha/2)))
z<-qnorm(1-(alpha/2))
ll <- p.hat - z*sqrt(p.hat*(1-p.hat)/n)
ul <- p.hat + z*sqrt(p.hat*(1-p.hat)/n)
(c.i <- c(ll,ul))
(c.i <- c(ll,ul))
cat('약 0.304~0.363')
# 4. 한 농구 선수가 자유투를 던지면 10번중에서 7번 성공한다고 할 때 다음을 R을 이용하여 풀이하시오
# 4-1. 10번 던져서 9번 이상 성공할 확률
1-pbinom(9,size=10,prob=7/10)
# 4-2. 10번 던질 때 5번 이상 8번 이하로 성공할 확률
pbinom(8,size=10,prob=7/10)-pbinom(5,size=10,prob=7/10)
# 5. 다음을 R을 이용하여 검정하시오
# 2006년 조사에 의하면 한국인의 1인 1일 평균 알코올 섭취량이 8.1g이다.
# 2008년 무작위로 뽑은 알코올 섭취량은 다음과 같다.
alcol<-c(16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
#평균 알코올 섭취량이 달라졌다고 할 수 있는가?
shapiro.test(alcol)
t.test(grade,mu=8.1,alternative="greater")
t.test(alcol,mu=8.1,alternative="greater")
t.test(alcol,mu=8.1,alternative="two.sided")
t.test(alcol,mu=8.1,alternative="two.sided")
iris$Sepal.Length
iris_setosa<-iris %>%
filter(Species=='setosa')
t.test(alcol,mu=8.1,alternative="two.sided") #
# 5. 다음을 R을 이용하여 검정하시오
# 2006년 조사에 의하면 한국인의 1인 1일 평균 알코올 섭취량이 8.1g이다.
# 2008년 무작위로 뽑은 알코올 섭취량은 다음과 같다.
alcol<-c(16.90, 13.21, 15.67, 9.87, 13.15, 9.98, 3.56, 14.50, 8.12, 6.97)
#평균 알코올 섭취량이 달라졌다고 할 수 있는가?
# H0==달라졌다 v.s H1== 달라지지 않았다
shapiro.test(alcol) #p-value가 0.8 이므로 정규분포에 따른다고 볼수있다.
t.test(alcol,mu=8.1,alternative="two.sided")
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
rangenorm(-1.96, 1.96, 0, 1)
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
library(rangenorm)
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
install.packages('rangenorm')
library(rangenorm)
rangenorm(-1.96, 1.96, 0, 1)
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
rangenorm(-1.96, 1.96, 0, 1)
# 7. mpg 데이터셋에서 다음을 검정해 보시오.
# 7-1.
mpg
# 7. mpg 데이터셋에서 다음을 검정해 보시오.
# 7-1.
library(ggplot2)
mpg
mpg$cty[mpg$class=="subcompact"]
shapiro.test(mpg$cty[mpg$class=="subcompact"])
qqnorm(mpg$cty[mpg$class=="subcompact"]) ; qqline(mpg$cty[mpg$class=="subcompact"])
qqnorm(mpg$cty[mpg$class=="subcompact"]) ; qqline(mpg$cty[mpg$class=="subcompact"])
#정규성을 나타내지 않는다.
mpg$cty[mpg$class=="midsize"]
shapiro.test(mpg$cty[mpg$class=="midsize"])
qqnorm(mpg$cty[mpg$class=="midsize"]) ; qqline(mpg$cty[mpg$class=="midsize"])
#이거 또한 정규성을 나타내지 않는다.
#만약 두집단 모두 정규성을 따른다고 가정하면
mpg1 <- mpg %>%
filter(class %in% c("subcompact","midsize"))
var.test(mpg1$cty~mpg1$class)
#p-value의 값이 굉장히 작으므로, 유의수준 0.05 하에서 두 집단의 분산은 다르다고 결론내린다
t.test(mpg1$cty~mpg1$class,var.equal=F)
#7-2.
mpg$cty[mpg$fl=="r"]
shapiro.test(mpg$cty[mpg$fl=="r"])
qqnorm(mpg$cty[mpg$fl=="r"]) ; qqline(mpg$cty[mpg$fl=="r"])
#7-2.
mpg$cty[mpg$fl=="r"]
shapiro.test(mpg$hwy[mpg$fl=="r"])
qqnorm(mpg$hwy[mpg$fl=="r"]) ; qqline(mpg$hwy[mpg$fl=="r"])
#7-2.
mpg$hwy[mpg$fl=="r"]
shapiro.test(mpg$hwy[mpg$fl=="r"])
qqnorm(mpg$hwy[mpg$fl=="r"]) ; qqline(mpg$hwy[mpg$fl=="r"])
mpg$hwy[mpg$fl=="p"]
shapiro.test(mpg$hwy[mpg$fl=="p"])
qqnorm(mpg$hwy[mpg$fl=="p"]) ; qqline(mpg$hwy[mpg$fl=="p"])
var.test(mpg2$hwy~mpg2$fl)
# 이 유의수준 0.05보다 작다. 따라서 두 집단 모두 정규분포를 따르지 않는다고 결론내린다. 이에 따라 다음과 같이
# 두가지의 경우로 나누어서 검정한다.
# 만약 두 집단의 가격이 모두 정규분포를 따른다고 가정한다면 2-sample T-test를 사용한다.
mpg2 <- mpg %>%
filter(fl %in% c("r","p"))
var.test(mpg2$hwy~mpg2$fl)
var.test(mpg2$hwy~mpg2$fl)
t.test(mpg2$hwy~mpg2$fl,var.equal=F)
#검정결과, p-value의 값이 약 0.043이므로, 유의수준 0.05 하에서 두 집단의 분산은 다르다고 결론내린다.
t.test(mpg2$hwy~mpg2$fl,var.equal=F)
install.packages("knitr")
install.packages("knitr")
# 8. 적합도를 검정하시오
x <- c(322, 109, 99, 29)
chisq.test(x, p=c(9, 3, 3, 1)/16)
chisq.test(x, p=c(9, 3, 3, 1)/16)
#p-value의 값이 굉장히 작으므로, 유의수준 0.05 하에서 두 집단의 분산은 다르다고 결론내린다
t.test(mpg1$cty~mpg1$class,var.equal=F)
# 9.'women'을 이용하여 다음을 구하시오
women
# 9.'women'을 이용하여 다음을 구하시오
fit<-im(weight~height, data=women)
# 9.'women'을 이용하여 다음을 구하시오
fit<-lm(weight~height, data=women)
summary(fit)
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
library(dprep)
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
install.packages('dprep')
# 6.정규분포에서 from <=X<=to 확률을 구하는 함수
# rangenorm(from, to, mean, sd)을 작성하고 rangenorm(-1.96, 1.96, 0, 1)의 값을 구하시오.
pnorm(1.96,mean=0,sd=1)-pnorm(-1.96,mean=0,sd=1)
lm(weight~height+I(height^2), women)
# 9.'women'을 이용하여 다음을 구하시오
plot(weight~height, women)
cor.test(women$weight, women$height)
# 9.'women'을 이용하여 다음을 구하시오
plot(weight~height, women)
fit<-lm(weight~height, data=women)
summary(fit)
cor.test(women$weight, women$height)
lm(weight~height+I(height^2), women)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
y<-150
p.hat<-x/y
alpha<-0.05
z<-qnorm(1-(alpha/2))
ll <- p.hat - z*sqrt(p.hat*(1-p.hat)/n)
ul <- p.hat + z*sqrt(p.hat*(1-p.hat)/n)
(c.i <- c(ll,ul))
cat('약 0.304~0.363')
library(dplyr)
x<-50
y<-150
p.hat<-x/y
alpha<-0.05
z<-qnorm(1-(alpha/2))
ll <- p.hat - z*sqrt(p.hat*(1-p.hat)/n)
ul <- p.hat + z*sqrt(p.hat*(1-p.hat)/n)
(c.i <- c(ll,ul))
cat('약 0.304~0.363')
# 4-1. 10번 던져서 9번 이상 성공할 확률
1-pbinom(9,size=10,prob=7/10)
# 4-2. 10번 던질 때 5번 이상 8번 이하로 성공할 확률
pbinom(8,size=10,prob=7/10)-pbinom(5,size=10,prob=7/10)
cat("정답: 2,4,5번")
# 1-1. 시행횟수가 6이고 성공확률이 1/3인 이항분포에서 성공횟수가 3이 될 확률
dbinom(3, 6, prob=1/3)
# 1-2. 평균이 170이고 표준편차가 6인 정규분포에서 상위20%되는 사람들의 키 범위
1-pnorm(0.2, 170, 6)
# 1-3. 자유도가 3인 카이제곱분포에서 누적확률이 95%일 때의 값
pchisq(0.95, 3)
# 1-4. 자유도가 2인 t-분포에서 누적확률이 0.975일 때의 값
qt(0.975, 2)
# 1-5. 표준정규분포에서 확률변수의 값이 1일 때의 누적확률
1
library(dplyr)
x<-50
y<-150
p.hat<-x/y
alpha<-0.05
z<-qnorm(1-(alpha/2))
ll <- p.hat - z*sqrt(p.hat*(1-p.hat)/x)
ul <- p.hat + z*sqrt(p.hat*(1-p.hat)/x)
(c.i <- c(ll,ul))
cat('약 0.304~0.363')
